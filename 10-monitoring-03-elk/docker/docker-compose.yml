version: "3.8"
services:

  elasticsearch-hot: # ES hot node
    image: "docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}"
    container_name: elasticsearch-hot-node
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # set the JVM minimum and maximum heap size
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
    deploy: 
      resources: # adjust resource limits for this node
        limits:
          cpus: "0.5"
          memory: "1024m"
        reservations:
          cpus: "0.25"
          memory: "512m"
    ports:
      - "${ES_PORT0}:${ES_PORT0}" # 9200
    volumes:
      - ../elasticsearch/elasticsearch-hot.yml:/usr/share/elasticsearch/config/elasticsearch.yml 
      - elasticsearch-hot_data:/usr/share/elasticsearch/data:Z
    networks:
      elk:
        ipv4_address: 192.168.32.2
    depends_on: # setup dependency
      - elasticsearch-warm
  
  elasticsearch-warm: # ES warm node
    image: "docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}"
    container_name: elasticsearch-warm-node
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # set the JVM minimum and maximum heap size
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
    deploy:
      resources: # adjust resource limits for this node
        limits:
          cpus: "0.5"
          memory: "1024m"
        reservations:
          cpus: "0.25"
          memory: "512m"
    ports:
      - "${ES_PORT1}:${ES_PORT1}"
    volumes:
      - ../elasticsearch/elasticsearch-warm.yml:/usr/share/elasticsearch/config/elasticsearch.yml 
      - elasticsearch-warm_data:/usr/share/elasticsearch/data:Z
    networks:
      elk:
        ipv4_address: 192.168.32.3

  kibana: #data visualization dashboard
    image: "docker.elastic.co/kibana/kibana:${STACK_VERSION}"
    container_name: kibana
    deploy:
      resources: # adjust resource limits for this node
        limits:
          cpus: "0.5"
          memory: "1024m"
        reservations:
          cpus: "0.25"
          memory: "512m"
    ports:
      - "${KIBANA_PORT}:${KIBANA_PORT}"
    volumes:
      - ../kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
      - kibana_data:/usr/share/kibana/data
    networks:
      elk:
        ipv4_address: 192.168.32.6
    depends_on: # setup dependency
      - elasticsearch-hot
      - elasticsearch-warm

  filebeat: # log shipper
    image: "docker.elastic.co/beats/filebeat:${STACK_VERSION}"
    container_name: filebeat-log-sender
    user: root
    volumes:
      - ../filebeat/filebeat-config.yml:/usr/share/filebeat/filebeat.yml:ro,Z # use settings from the .yml file
      - /var/lib/docker:/var/lib/docker:Z
      - /var/run/docker.sock:/var/run/docker.sock # share the docker socker with the filebeat container
    deploy:
      resources: # adjust resource limits for this node
        limits:
          cpus: "0.5"
          memory: "1024m"
        reservations:
          cpus: "0.25"
          memory: "512m"
    networks:
      elk:
        ipv4_address: 192.168.32.4
    depends_on: # setup dependency
      - logstash

  logstash: # log-data processing pipeline
    image: "docker.elastic.co/logstash/logstash:${STACK_VERSION}"
    container_name: logstash-log-filter
    volumes:
      - ../logstash/logstash-config.conf:/usr/share/logstash/pipeline/logstash.conf:ro,Z # 
      - ../logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z #
    deploy:
      resources: # adjust resource limits for this node
        limits:
          cpus: "0.5"
          memory: "1024m"
        reservations:
          cpus: "0.25"
          memory: "512m"
    ports:
      - "${LOGSTASH_PORT}:${LOGSTASH_PORT}"
    networks:
      elk:
        ipv4_address: 192.168.32.5
    depends_on: # setup dependency
      - elasticsearch-hot
      - elasticsearch-warm

volumes:
  elasticsearch-hot_data:
    driver: local
  elasticsearch-warm_data:
    driver: local
  kibana_data:
    driver: local
 
networks:
  elk:
    driver: bridge
    ipam:
      config:
      - subnet: 192.168.32.0/28
        gateway: 192.168.32.1